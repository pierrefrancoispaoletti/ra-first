{"version":3,"sources":["components/UserList/index.js","components/Filters/index.js","components/PostList/index.js","components/PostEdit/index.js","components/PostCreate/index.js","pages/Home/index.js","auth/index.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["UserList","props","isSmall","useMediaQuery","theme","breakpoints","down","List","SimpleList","primaryText","record","name","secondaryText","email","tertiaryText","phone","Datagrid","rowClick","TextField","source","EmailField","UrlField","PostFilter","Filter","TextInput","label","alwaysOn","ReferenceInput","reference","allowEmpty","SelectInput","optionText","PostList","filters","title","id","ReferenceField","EditButton","PostTitle","PostEdit","Edit","SimpleForm","disabled","multiline","PostCreate","Create","Home","Card","CardHeader","CardContent","login","username","localStorage","setItem","Promise","resolve","logout","removeItem","checkError","status","reject","checkAuth","getItem","getPermissions","dataProvider","jsonServerProvider","App","Admin","dashboard","authProvider","Resource","list","edit","create","icon","PostIcon","UserIcon","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.17b3b045.chunk.js","sourcesContent":["import {\n  Datagrid,\n  EmailField,\n  List,\n  SimpleList,\n  TextField,\n  UrlField,\n} from \"ra-ui-materialui\";\nimport { useMediaQuery } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst UserList = (props) => {\n  const isSmall = useMediaQuery((theme) => theme.breakpoints.down(\"sm\"));\n  return (\n    <List {...props}>\n      {isSmall ? (\n        <SimpleList\n          primaryText={(record) => record.name}\n          secondaryText={(record) => record.email}\n          tertiaryText={(record) => record.phone}\n        />\n      ) : (\n        <Datagrid rowClick=\"edit\">\n          <TextField source=\"id\" />\n          <TextField source=\"name\" />\n          <TextField source=\"username\" />\n          <EmailField source=\"email\" />\n          <TextField source=\"address.street\" />\n          <TextField source=\"phone\" />\n          <UrlField source=\"website\" />\n          <TextField source=\"company.name\" />\n        </Datagrid>\n      )}\n    </List>\n  );\n};\n\nexport default UserList;\n","import {\n  Filter,\n  ReferenceInput,\n  SelectInput,\n  TextInput,\n} from \"ra-ui-materialui\";\nimport React from \"react\";\n\nconst PostFilter = (props) => (\n  <Filter {...props}>\n    <TextInput label=\"Search\" source=\"q\" alwaysOn />\n    <ReferenceInput label=\"User\" source=\"userId\" reference=\"users\" allowEmpty>\n      <SelectInput optionText=\"name\" />\n    </ReferenceInput>\n  </Filter>\n);\n\nexport default PostFilter;\n","import * as React from \"react\";\nimport { useMediaQuery } from \"@material-ui/core\";\nimport {\n  List,\n  SimpleList,\n  Datagrid,\n  TextField,\n  ReferenceField,\n  EditButton,\n} from \"react-admin\";\nimport PostFilter from \"../Filters\";\n\nconst PostList = (props) => {\n  const isSmall = useMediaQuery((theme) => theme.breakpoints.down(\"sm\"));\n  return (\n    <List filters={<PostFilter />} {...props}>\n      {isSmall ? (\n        <SimpleList\n          primaryText={(record) => record.title}\n          secondaryText={(record) => record.id}\n        />\n      ) : (\n        <Datagrid>\n          <TextField source=\"id\" />\n          <ReferenceField label=\"User\" source=\"userId\" reference=\"users\">\n            <TextField source=\"name\" />\n          </ReferenceField>\n          <TextField source=\"title\" />\n          <TextField source=\"body\" />\n          <EditButton />\n        </Datagrid>\n      )}\n    </List>\n  );\n};\n\nexport default PostList;\n","import {\n  Edit,\n  ReferenceInput,\n  SelectInput,\n  SimpleForm,\n  TextInput,\n} from \"ra-ui-materialui\";\nimport React from \"react\";\n\nconst PostTitle = ({ record }) => {\n    return <span>Post {record ? `\"${record.title}\"` : \"\"}</span>;\n  };\n\nconst PostEdit = (props) => {\n  return (\n    <Edit title={<PostTitle />} {...props}>\n      <SimpleForm>\n        <TextInput disabled source=\"id\" />\n        <ReferenceInput source=\"userId\" reference=\"users\">\n          <SelectInput optionText=\"username\" />\n        </ReferenceInput>\n        <TextInput source=\"title\" />\n        <TextInput multiline source=\"body\" />\n      </SimpleForm>\n    </Edit>\n  );\n};\n\nexport default PostEdit;\n","import { Create, ReferenceInput, SelectInput, SimpleForm, TextInput } from 'ra-ui-materialui';\nimport React from 'react';\n\nconst PostCreate = (props) => {\n    return (\n        <Create {...props}>\n        <SimpleForm>\n            <ReferenceInput source=\"userId\" reference=\"users\">\n                <SelectInput optionText=\"username\" />\n            </ReferenceInput>\n            <TextInput source=\"title\" />\n            <TextInput multiline source=\"body\" />\n        </SimpleForm>\n    </Create>\n    );\n}\n\nexport default PostCreate;\n","import React from \"react\";\nimport { Card, CardContent, CardHeader } from \"@material-ui/core\";\nconst Home = () => {\n  return (\n    <Card>\n      <CardHeader title=\"Bienvenue chez GoodCloud\" />\n      <CardContent>\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Saepe\n        perferendis magnam odio?\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Home;\n","export default {\n  // called when the user attempts to log in\n  login: ({ username }) => {\n    localStorage.setItem(\"username\", username);\n    // accept all username/password combinations\n    return Promise.resolve();\n  },\n  // called when the user clicks on the logout button\n  logout: () => {\n    localStorage.removeItem(\"username\");\n    return Promise.resolve();\n  },\n  // called when the API returns an error\n  checkError: ({ status }) => {\n    if (status === 401 || status === 403) {\n      localStorage.removeItem(\"username\");\n      return Promise.reject();\n    }\n    return Promise.resolve();\n  },\n  // called when the user navigates to a new location, to check for authentication\n  checkAuth: () => {\n    return localStorage.getItem(\"username\")\n      ? Promise.resolve()\n      : Promise.reject();\n  },\n  // called when the user navigates to a new location, to check for permissions / roles\n  getPermissions: () => Promise.resolve(),\n};\n","import React from \"react\";\nimport { Admin, Resource } from \"react-admin\";\nimport jsonServerProvider from \"ra-data-json-server\";\nimport UserList from \"../UserList\";\nimport PostList from \"../PostList\";\nimport PostEdit from \"../PostEdit\";\nimport PostCreate from \"../PostCreate\";\nimport PostIcon from '@material-ui/icons/Book';\nimport UserIcon from '@material-ui/icons/Group';\nimport Home from \"../../pages/Home\";\nimport authProvider from \"../../auth\"\n\n\nconst dataProvider = jsonServerProvider(\"https://jsonplaceholder.typicode.com\");\nconst App = () => {\n  return (\n    <Admin dashboard={Home} authProvider={authProvider} dataProvider={dataProvider}>\n      <Resource name=\"posts\" list={PostList} edit={PostEdit} create={PostCreate} icon={PostIcon} />\n      <Resource name=\"users\" list={UserList} icon={UserIcon} />\n    </Admin>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}